{"mappings":"ACEA,IAAM,EAAO,SAAS,IAAI,CAoD1B,SAAS,EAAc,CAAU,CAAE,CAAa,EAC9C,IAAM,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,YAAY,CAAC,UAAW,gBAE5B,GACF,EAAQ,SAAS,CAAC,GAAG,CAAC,WAEtB,EAAQ,WAAW,CAAI,GAAgB,MAAA,CAAd,EAAc,2BAEvC,EAAQ,SAAS,CAAC,GAAG,CAAC,SACtB,EAAQ,WAAW,CAAI,GAAgB,MAAA,CAAd,EAAc,0BAGzC,EAAK,MAAM,CAAC,EACd,CArDA,AAZqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAM,EAAY,WAAW,WAC3B,EAAO,AAAI,MAAM,8BACnB,EAAG,KAEH,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,8BAER,aAAa,EACf,EACF,GAGG,IAAI,CAAC,WACJ,EAAc,CAAA,EAAM,QACtB,GACC,KAAK,CAAC,WACL,EAAc,CAAA,EAAO,QACvB,GAYF,AAVsB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA5C,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,8BACV,GAEA,EAAK,gBAAgB,CAAC,cAAe,WACnC,EAAQ,8BACV,EACF,GAEc,IAAI,CAAC,WACjB,EAAc,CAAA,EAAM,SACtB,GAcA,QAAQ,GAAG,CAAC,CAZa,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA/C,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,qBACV,EACF,GAE0B,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAhD,EACE,EAAK,gBAAgB,CAAC,cAAe,WACnC,EAAQ,sBACV,EACF,GAEiD,EAAE,IAAI,CAAC,WACtD,OAAO,EAAc,CAAA,EAAM,QAC7B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar body = document.body;\nvar firstPromise = new Promise(function(resolve, reject) {\n    var timeoutId = setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n    body.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved\");\n        clearTimeout(timeoutId);\n    });\n});\nfirstPromise.then(function() {\n    resultHandler(true, \"First\");\n}).catch(function() {\n    resultHandler(false, \"First\");\n});\nvar secondPromise = new Promise(function(resolve, reject) {\n    body.addEventListener(\"click\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n    body.addEventListener(\"contextmenu\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n});\nsecondPromise.then(function() {\n    resultHandler(true, \"Second\");\n});\nvar leftClickPromise = new Promise(function(resolve, reject) {\n    body.addEventListener(\"click\", function() {\n        resolve(\"left click happend\");\n    });\n});\nvar rightClickPromise = new Promise(function(resolve, reject) {\n    body.addEventListener(\"contextmenu\", function() {\n        resolve(\"rigth click happend\");\n    });\n});\nPromise.all([\n    leftClickPromise,\n    rightClickPromise\n]).then(function() {\n    return resultHandler(true, \"Third\");\n});\nfunction resultHandler(isResolved, promiseNumber) {\n    var message = document.createElement(\"div\");\n    message.setAttribute(\"data-qa\", \"notification\");\n    if (isResolved) {\n        message.classList.add(\"success\");\n        message.textContent = \"\".concat(promiseNumber, \" promise was resolved\");\n    } else {\n        message.classList.add(\"error\");\n        message.textContent = \"\".concat(promiseNumber, \" promise was rejected\");\n    }\n    body.append(message);\n}\n\n//# sourceMappingURL=index.470875b1.js.map\n","'use strict';\n\nconst body = document.body;\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const timeoutId = setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n\n  body.addEventListener('click', () => {\n    resolve('First promise was resolved');\n\n    clearTimeout(timeoutId);\n  });\n});\n\nfirstPromise\n  .then(() => {\n    resultHandler(true, 'First');\n  })\n  .catch(() => {\n    resultHandler(false, 'First');\n  });\n\nconst secondPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  body.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nsecondPromise.then(() => {\n  resultHandler(true, 'Second');\n});\n\nconst leftClickPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('left click happend');\n  });\n});\n\nconst rightClickPromise = new Promise((resolve, reject) => {\n  body.addEventListener('contextmenu', () => {\n    resolve('rigth click happend');\n  });\n});\n\nPromise.all([leftClickPromise, rightClickPromise]).then(() => {\n  return resultHandler(true, 'Third');\n});\n\nfunction resultHandler(isResolved, promiseNumber) {\n  const message = document.createElement('div');\n\n  message.setAttribute('data-qa', 'notification');\n\n  if (isResolved) {\n    message.classList.add('success');\n\n    message.textContent = `${promiseNumber} promise was resolved`;\n  } else {\n    message.classList.add('error');\n    message.textContent = `${promiseNumber} promise was rejected`;\n  }\n\n  body.append(message);\n}\n"],"names":["body","document","resultHandler","isResolved","promiseNumber","message","createElement","setAttribute","classList","add","textContent","concat","append","firstPromise","Promise","resolve","reject","timeoutId","setTimeout","Error","addEventListener","clearTimeout","then","catch","secondPromise","all"],"version":3,"file":"index.470875b1.js.map"}